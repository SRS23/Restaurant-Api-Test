package com.restassure.RestaurantApiTest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import static io.restassured.RestAssured.given;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.core.config.Configurator;
import org.testng.annotations.Test;

import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.specification.ResponseSpecification;
import payload.DataForTests;
import uriData.UriLinkss;
import tokens.Tokenss;

public class RestaurantApiTesting {
	
	String jwtToken = Tokenss.generateJwtToken("475938");
	
	

	@Test(priority=1)
	public void RestaurantApiGetTestt() {
		
		RequestSpecification req = new RequestSpecBuilder().setBaseUri(UriLinkss.baseURI).build();
		RequestSpecification req1 = given().spec(req);
		
		ResponseSpecification res = new ResponseSpecBuilder().expectContentType(ContentType.JSON).build();
		Response res1 = req1.when().get().then().log().all().spec(res).extract().response();
		
		String res2 = res1.asPrettyString();
		
		System.out.println(res2);
		System.out.println(jwtToken);
			
	}
	
	@Test(priority=2)
	public void RestaurantApiPostTestt() {
			
		RequestSpecification req = new RequestSpecBuilder().setBaseUri(UriLinkss.baseURI).build();
		RequestSpecification req1 = given().spec(req).body(DataForTests.postData()).body(DataForTests.postData1()).header("Authorization", "Bearer " + jwtToken);
		
		ResponseSpecification res = new ResponseSpecBuilder().build();
		Response res1 = req1.when().post().then().log().all().spec(res).extract().response();
		
		String res2 = res1.asPrettyString();
		
		System.out.println(res2);
	}
		
	@Test(priority=3)
	public void RestaurantApiPutTestt() {
				
		
		RequestSpecification req = new RequestSpecBuilder().setBaseUri(UriLinkss.baseURI).build();
		RequestSpecification req1 = given().spec(req).header("Authorization", "Bearer " + jwtToken);
		
		ResponseSpecification res = new ResponseSpecBuilder().expectContentType(ContentType.JSON).build();
		Response res1 = req1.when().put().then().log().all().spec(res).extract().response();
		
		String res2 = res1.asPrettyString();
		
		System.out.println(res2);
		
		
	}
		
		
	@Test(priority=4)
	public void RestaurantApiDeleteTestt() {
			
		RequestSpecification req = new RequestSpecBuilder().setBaseUri(UriLinkss.baseURI).build();
		RequestSpecification req1 = given().spec(req).header("Authorization", "Bearer " + jwtToken);
		
		ResponseSpecification res = new ResponseSpecBuilder().expectContentType(ContentType.JSON).build();
		Response res1 = req1.when().delete().then().log().all().spec(res).extract().response();
		
		String res2 = res1.asPrettyString();
		
		System.out.println(res2);
		System.out.println(jwtToken);
		
		
	}
}
